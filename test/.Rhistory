base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- 'Base'
cgd <- as.data.frame(new_RTable('ChildGenderDistribution', db_channels[[cscenarios]]))
print(cgd)
cgd <- subset(cgd, metrics == 'Number of Children')[,1:3]
str(cgd)
num_female <- subset(cgd, gender == 'F', select = 'Value')
print(num_female)
stopifnot(nrow(num_female) == 1)
num_female <- num_female[1,1]
print(num_female)
total_children <- sum(cgd$Value)
print(total_children)
output_female_percentage <- num_female / total_children
print(output_female_percentage)
input_female_percentage <- as.data.frame(new_PTable('GenderChildFemaleProportion', db_channels[[cscenarios]]))
print(input_female_percentage)
stopifnot(nrow(input_female_percentage) == 1)
input_female_percentage <- input_female_percentage[1,1] 
str(input_female_percentage)
in_out_ratio <- output_female_percentage / input_female_percentage  
cscenarios <- 'Base'
cgd <- as.data.frame(new_RTable('ChildGenderDistribution', db_channels[[cscenarios]]))
cgd <- subset(cgd, metrics == 'Number of Children')[,1:3]
num_female <- subset(cgd, gender == 'F', select = 'Value')
stopifnot(nrow(num_female) == 1)
num_female <- num_female[1,1]
total_children <- sum(cgd$Value)
output_female_percentage <- num_female / total_children
input_female_percentage <- as.data.frame(new_PTable('GenderChildFemaleProportion', db_channels[[cscenarios]]))
stopifnot(nrow(input_female_percentage) == 1)
input_female_percentage <- input_female_percentage[1,1] 
print(list(input_female_percentage = input_female_percentage,
           output_female_percentage = output_female_percentage))
in_out_ratio <- output_female_percentage / input_female_percentage  
result <- in_out_ratio > 0.975 & in_out_ratio < 1.025
print(result)
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- 'Base'
csd <- as.data.frame(new_RTable('ChildSESDistribution', db_channels[[cscenarios]]))
csd <- subset(csd, metrics == 'Number of Children')[,1:3]
num_high <- subset(csd, ses == 'HIGH', select = 'Value')
print(csd)
num_high <- subset(csd, 'Socioeconomic Status' == 'HIGH', select = 'Value')
stopifnot(nrow(num_high) == 1)
str(num_high)
csd <- as.data.frame(new_RTable('ChildSESDistribution', db_channels[[cscenarios]]))
csd <- subset(csd, metrics == 'Number of Children')[,1:3]
str(csd)
num_high <- subset(csd, 'Socioeconomic Status' == 'HIGH', select = 'Value')
str(num_high)
num_high <- subset(csd, `Socioeconomic Status` == 'HIGH', select = 'Value')
print(num_high)
stopifnot(nrow(num_high) == 1)
num_high <- num_high[1,1]
total_children <- sum(csd$Value)
output_high_percentage <- num_high / total_children
print(output_high_percentage)
input_high_percentage <- as.data.frame(new_PTable('HighSESMotherPercentage', db_channels[[cscenarios]]))
stopifnot(nrow(input_high_percentage) == 1)
input_high_percentage <- input_high_percentage[1,1] 
print(list(input_high_percentage = input_high_percentage,
           output_high_percentage = output_high_percentage))
in_out_ratio <- output_high_percentage / input_high_percentage  
print(in_out_ratio)
result <- in_out_ratio > 0.975 & in_out_ratio < 1.025
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
available_scenarios
run_scenario(td, available_scenarios[[6]]$scex, td, 'MochModel4.exe')
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- c('Base', 'LowFertilityInHighSES')
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
all_data
p <- ggplot(all_data, aes(y = High_SES, x = scenario)) +
  geom_bar(stat = 'identity')
print(p)
cscenarios <- c('Base', 'LowFertilityInHighSES', 'NoHIV')
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
:w
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cgd <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
cscenarios <- 'Base'
cgd <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
str(cgd)
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cgd <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
cscenarios <- 'Base'
cgd <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
str(cgd)
cs <- subset(cgd, metrics == 'Child Years')[,1:3]
str(cs)
cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
cs <- subset(cgd, metrics == 'Child Years')[,1:3]
p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`) +
            geom_line()
print(p)
p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`)) +
            geom_line()
print(p)
cgd <- as.data.frame(new_RTable('ChildGenderDistribution', db_channels[[cscenarios]]))
cgd <- subset(cgd, metrics == 'Number of Children')[,1:3]
num_female <- subset(cgd, gender == 'F', select = 'Value')
print(num_female)
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- 'Base'
cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
str(cs)
cs <- subset(cgd, metrics == 'Child Years')[,1:3]
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- 'Base'
cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenarios]]))
str(cs)
cs <- subset(cs, metrics == 'Child Years')[,1:4]
p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
            geom_line()
print(p)
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
available_scenarios
run_scenario(td, available_scenarios[[7]]$scex, td, 'MochModel4.exe')
cscenarios <- c('Base', 'NoChildMortality')
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
for (cscenario in cscenarios){
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
  p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
              geom_line()
  print(cscenario)
  print(p)
}
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
:w
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenarios <- c('Base', 'NoChildMortality')
for (cscenario in cscenarios){
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
  p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
              geom_line()
  p <- p + stat_function(fun = healthy_mort_function, color = 'black', 
                         arg = list('healthy_mortality' = healthy_mort, gender = 'M'))
  p <- p + stat_function(fun = healthy_mort_function, color = 'green', 
                         arg = list('healthy_mortality' = healthy_mort, gender = 'F'))
  print(cscenario)
  print(p)
}
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
str(cs)
  cs$Value[cs$gender == 'F'] <- cs$Value[cs$gender == 'F'] / max(cs$Value[cs$gender == 'F'])
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
  cs$Value[cs$gender == 'F'] <- cs$Value[cs$gender == 'F'] / max(cs$Value[cs$gender == 'F'])
  p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
              geom_line()
  p <- p + stat_function(fun = healthy_mort_function, color = 'black', 
                         arg = list(gender = 'M'))
  p <- p + stat_function(fun = healthy_mort_function, color = 'green', 
                         arg = list(gender = 'F'))
  print(cscenario)
  print(p)
}
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
cscenario <- 'Base'
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
  cs$Value[cs$gender == 'F'] <- cs$Value[cs$gender == 'F'] / max(cs$Value[cs$gender == 'F'])
  cs$Value[cs$gender == 'M'] <- cs$Value[cs$gender == 'M'] / max(cs$Value[cs$gender == 'M'])
  p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
              geom_line()
  p <- p + stat_function(fun = healthy_mort_function, color = 'black', 
                         arg = list(gender = 'M'))
  p <- p + stat_function(fun = healthy_mort_function, color = 'green', 
                         arg = list(gender = 'F'))
  print(cscenario)
  print(p)
  healthy_mortality <- as.data.frame(new_PTable("HIVFreeMortality", db_channels[[cscenario]]))
str(healthy_mortality)
  model_time <- as.data.frame(new_PTable("ModelTime", db_channels[[cscenario]]))[1,1]
  stopifnot(nrow(healthy_mortality) >= 90)
  healthy_mortality <- subset(healthy_mortality, `ASSA model Time Range` == model_time &
                                        GENDER == gender)
gender <- 'M'
  healthy_mortality <- subset(healthy_mortality, `ASSA model Time Range` == model_time &
                                        GENDER == gender)
str(healthy_mortality)
age <- 0
    age_int <- floor(age)
    if (age_int <= 0) { age <- 0}
    y <- prod(1 - healthy_mortality[healthy_mortality$`Mortality Life Range` <= age_int,]$Value)
    all_results <- c(all_results, y)
print(all_results)
all_results <- NULL
cscenario <- 'Base'
  cs <- as.data.frame(new_RTable('ChildSurvival', db_channels[[cscenario]]))
  cs <- subset(cs, metrics == 'Child Years')[,1:4]
  cs$Value[cs$gender == 'F'] <- cs$Value[cs$gender == 'F'] / max(cs$Value[cs$gender == 'F'])
  cs$Value[cs$gender == 'M'] <- cs$Value[cs$gender == 'M'] / max(cs$Value[cs$gender == 'M'])
  p <- ggplot(cs, aes(x = `Integer Age`, y = `Value`, color = gender)) +
              geom_line()
  p <- p + stat_function(fun = healthy_mort_function, color = 'black', 
                         arg = list(gender = 'M'))
  p <- p + stat_function(fun = healthy_mort_function, color = 'green', 
                         arg = list(gender = 'F'))
  print(cscenario)
  print(p)
all_results <- NULL
gender <- 'M'
age <- 0
cscenario <- 'Base'
print(all_results)
  healthy_mortality <- as.data.frame(new_PTable("HIVFreeMortality", db_channels[[cscenario]]))
  model_time <- as.data.frame(new_PTable("ModelTime", db_channels[[cscenario]]))[1,1]
  stopifnot(nrow(healthy_mortality) >= 90)
  healthy_mortality <- subset(healthy_mortality, `ASSA model Time Range` == model_time &
                                        GENDER == gender)
    age_int <- floor(age)
    if (age_int <= 0) { age <- 0}
    y <- prod(1 - healthy_mortality[healthy_mortality$`Mortality Life Range` <= age_int,]$Value)
    all_results <- c(all_results, y)
print(all_results)
age <- 1
    age_int <- floor(age)
    if (age_int <= 0) { age <- 0}
    y <- prod(1 - healthy_mortality[healthy_mortality$`Mortality Life Range` <= age_int,]$Value)
    all_results <- c(all_results, y)
print(all_results)
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
220/.85
220/.9
220/.95
220/0.9
220/0.95
258*.85
258*.9
258*.95
160/.8
160/.85
188*.95
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
base::source("C:/Users/ADMINI~1/AppData/Local/Temp/r-plugin-Administrator/Rsource-7496-MochModel4Tests.Rmd")
q()
