//LABEL(MotherDiagnosis, EN) Determines when an infected mother becomes diagnosed

/* NOTE(MotherDiagnosis, EN)
	This module schedules and implements the event that transitions a mother
	from the infected state into the diagnosed state. This transition competes
	with the transitions into the death state and the showing symptoms state.
	Due to the limited information on the rates of diagnosis, only a simple
	exponential rate is implemented.

	- Data requirements

	A single exponential rate parameter must be specified.

	- Implementation details

	A number, x, is drawn at random from a unifrom distribution. The transition
	into diagnosis is scheduled log(x) / -(InfectedDiagnosisMotherRate) years after infection.
*/

parameters
{
	double InfectedDiagnosisMotherRate; //EN Diagnosis Rate of Infected Mothers
	double SymptomaticDiagnosisMotherRate; //EN Diagnosis Rate of Symptomatic Mothers
	double InfectedDiagnosisTransitionMotherSwitch; //EN A switch allowing to choose which transition to use for diagnosis of asymptomatic mothers
	double InfectedDiagnosisMotherPercentage[MORT_TIME]; //EN The percentage of asymptomatic mothers who become diagnosed
	double SymptomaticDiagnosisTransitionMotherSwitch; //EN A switch allowing to choose which transition to use for diagnosis of symptomatic mothers
	double SymptomaticDiagnosisMotherPercentage[MORT_TIME]; //EN The percentage of symptomatic mothers who become diagnosed
};

/* NOTE(InfectedDiagnosisMotherRate, EN)
    An exponential rate at which mothers become diagnosed
	after becoming infected.
*/

/* NOTE(SymptomaticDiagnosisMotherRate, EN)
    An exponential rate at which mothers become diagnosed
	after becoming symptomatic.
*/

/* NOTE (InfectedDiagnosisTransitionMotherSwitch, EN)
	This switch allows one to choose between scheduling diagnosis of an asymptomatic mother based on a weibull 
	curve from the time since eligibility or based on the percentage of mothers that gets diagnosed while asymptomatic
	Setting this value to zero will use the weibull rate.
	Setting this value to one will use the percentage based approach.
*/

/* NOTE (InfectedDiagnosisMotherPercentage, EN)
	The percentage of asymptomatic mothers who become diagnosed. A percentage can be specified for each model year
*/

/* NOTE (SymptomaticDiagnosisTransitionMotherSwitch, EN)
	This switch allows one to choose between scheduling diagnosis of an symptomatic mother based on a weibull 
	curve from the time since eligibility or based on the percentage of mothers that gets diagnosed while symptomatic
	Setting this value to zero will use the weibull rate.
	Setting this value to one will use the percentage based approach.
*/

/* NOTE (SymptomaticDiagnosisMotherPercentage, EN)
	The percentage of symptomatic mothers who become diagnosed. A percentage can be specified for each model year
*/

actor Mother
{
	logical diagnosed = {FALSE};

	event timeDiagnosisEvent, diagnosisEvent;
};

TIME Mother::timeDiagnosisEvent()
{
	TIME t_event_time = TIME_INFINITE;
	// Without symptoms
	if (mdeath_sched_status == mdsINFECTED && diagnosed == FALSE && showing_symptoms == FALSE)
	{
		if (InfectedDiagnosisTransitionMotherSwitch == 0){
			t_event_time = log(RandUniform(9)) / -InfectedDiagnosisMotherRate;
		} else {
			double exit_date = min(min(infected_death_time, infected_symptoms_time), 100);

			t_event_time = RandUniform(14) * exit_date / InfectedDiagnosisMotherPercentage[ModelTime];
		}
	}

	// With Symptoms
	if (mdeath_sched_status == mdsINFECTED && diagnosed == FALSE && showing_symptoms == TRUE)
	{
		if (SymptomaticDiagnosisTransitionMotherSwitch == 0){
			t_event_time = log(RandUniform(10)) / -SymptomaticDiagnosisMotherRate;
		}
	}
	t_event_time = WAIT(t_event_time);
	return(t_event_time);
};

void Mother::diagnosisEvent()
{
	diagnosed = TRUE;
	if (mdetailed_status == mdSYMPTOMS)
	{
		mdetailed_status = mdDIAGSYMP;
	} else {
		mdetailed_status = mdDIAGNOSED;
	};
/*	disease_status_detailed = DIAGNOSED_;
	int nIndex = {-1};
	Child *prChild = {NULL};
	while (prChild = mlChild->GetNext(nIndex+1, &nIndex))
	{
		prChild->Mother_Diagnose();
	}*/
};